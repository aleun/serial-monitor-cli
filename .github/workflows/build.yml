# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - v*

jobs:
  build:

    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: main
            asset_name: serial-monitor-cli-linux
          - os: macos-latest
            artifact_name: main
            asset_name: serial-monitor-cli-macos
          - os: windows-latest
            artifact_name: main.exe
            asset_name: serial-monitor-cli-windows
    environment: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build
      run: |
        pyinstaller src/main.py --onefile
    - name: upload executable to github tag
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.OAUTH_TOKEN }}
        file: ${{ github.workspace }}/dist/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.assert_name }}
        tag: ${{ github.ref }}
